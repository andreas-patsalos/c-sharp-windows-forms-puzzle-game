<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAACAAAAAgAAAAMAAAAEAAAABQAAAAUAAAAFAAAAAwAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAA
        AAMAAAAEAAAABQAAAAUAAAAFAAAABQAAAAUAAAAIAAAAC3VYExqyhB4ywpMhTMuaJGPSniZ/1KEmkbSI
        HksAAAARAAAACQAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAcAAAALimYVI72PIE7FliNm0Jwkf9CdJHhnTw8gAAAAFdGeJZbhrC3z5bRC/+i9V//rxW3/7c2A//DW
        l//x2Jz/47A3/Z53HGIAAAAbAAAADAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABQAA
        AAkAAAAPAAAAGbCDH2HjsT3468Zv/+7Og//x15n/7Mh1/9umJ9epfh1x6cBh//78+f//////////////
        ///////////////////qxGv/3acn7VxGDkUAAAAaAAAACQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAoAAAATAAAAHAAAACYAAAAx16Mm2/rx3f/////////////////25r//4qsp/96nJ/DmuEv//v36////
        /////////////////////////////+3Lev/iqyn/1KEm1B8VBTAAAAAWAAAACAAAAAIAAAAAAAAAAAAA
        AAEAAAAHAAAAFgAAACkAAAA1AAAAPQAAAEPYoybo/fnx/////////////fv1/+a5TP/iqyv/4qsp/+Kr
        Kf/ty3z/////////////////////////////////7cx+/+KrKf/iqyn/uYshmgAAACcAAAATAAAABQAA
        AAAAAAAAAAAAAQAAAAkAAAAdNycHQKh+HZG6jCGuqH8dnNqmJ+79+fH////////////y2qP/4qws/+Kr
        Kf/iqyn/4qsp/+KrK//+/fr////////////////////////////tzYD/4qwt/+KrKf/MmiTGAAAANQAA
        AB0AAAAJAAAAAAAAAAAAAAABAAAAB5t3G0DfrDPq79KM//XhtP/uzoL/4qwr//368////////////+/Q
        if/irS7/4qsp/+KrKf/iqyn/5LI7/////////////////////////////////+3NgP/irS//4qsp/8qZ
        JMMAAAA0AAAAHgAAAAoAAAAAAAAAAAAAAACUfxUM4a0v4Pnt0v/////////////////468z/////////
        ////////9+nI/+KrKv/iqyn/4qsp/+KrKf/y3Kb////////////9+/b//v79////////////7c2A/+Kt
        L//iqyn/0J0lxAAAACUAAAATAAAABgAAAAAAAAAAAAAAAOGoJ1Xty3z/////////////////////////
        ////////////////////////9eK2/+m/XP/pwF//9OG0///////68dz/6L1X/+KtLv/ksz7/9OGz//7+
        /v/qw2f/4qws/+KrKf/ZpCbGAAAAEgAAAAcAAAACAAAAAAAAAAAAAAAA4qonfPLZoP//////////////
        /////////////////////////////////////////////////////////vz5/+W2Rf/irCv/4qsp/+Kr
        Kv/irCv/464x/+KsK//iqyn/4qsr/96oJ8IAAAAGAAAAAgAAAAAAAAAAAAAAAAAAAADjqyZc7Mh1////
        ///////////////////258P////////////////////////////////////////////258L/4qwt/+Kr
        Kf/iqyn/4qsp/+KrKf/iqyn/4qsp/+KrKf/iqyn/4KonwAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAOei
        Fwviqyrf8tuk//79+//+/fr/8tqh/+KrK/////////////////////////////////////////////fn
        xP/irCz/4qsp/+KrKf/iqyn/4qsp/+OuM//iqyn/4qsp/+KrKf/iqiegAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOSqJyfhqija4q0u/+OuMf/iqyv/4qsp////////////////////////////////////
        /////////v37/+e6UP/iqyn/4qsp/+KrKf/uz4b//v36/+3Le//iqyn/4aootuWyJhQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOuwJw3iqiez4qsp/+KrKf/iqyn/////////////////////////
        /////////////////////////fnx//DWlv/tzH7/9uW+////////////8NWU/+KsLP/iqinN2qMkDgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9/AALhqyiJ4aoo/uKrKf//////////////
        ///////////////////////////////////////////////////////////////////w1ZT/4qsp/+Kr
        Kf/hqyieAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjrSg44aoo9///
        //////////////////////////////////////////////////////////////////////////////DV
        lP/iqyn/4qsp/+GqKN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADhqijv//////////////////////////////////////////////////////////////////////37
        9f/68t7/6L1X/+KsLf/irCv/4aop3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOGrKOT47M///Pjt//nw2f/36cf/9eS7//Lcpv/w1JT/9+jG////////////+/Xm/+a2
        R//irS7/4q0v/+KrKv/irCv/4qsp/+KrKf/hqinfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4asmVuGqKPniqyn/4qsp/+KsLf/irC3/4qsp/+W1RP/8+O7/////////
        ////////9N6t/+KsLf/iqyr/4qsp/+KsK//iqyn/4qsp/+GrKN4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4asnNOGqKOLiqyn/4qsp/+KrKf/iqyn/896t////
        ///////////////////+/v7/5LE5/+KrK//iqyn/4qsp/+KrKf/hqij+46soZQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA560iFuGqJ8Diqyn/4qsp/+Kr
        Kf/47NH///////////////////////7+/v/ksTj/4qsp/+KrKf/iqieH46soUuSqJycAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/38AAuOt
        KDjkqyc64aooq/Lbo///////////////////////9+fD/+KsK//iqyn/4qsp/+KqKIUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADkqykx47A4+fjrzP////////////fpyP/ksjv/4qsq/+KrKf/iqyn/4asongAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkqydV4aoo8ua3SP/ltUP/4qwr/+KrKv/iqyn/4qsp/+Kr
        Kf/hqihwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlrCYo4aon2eKsLP/iqyn/4qsp/+Kr
        Kf/iqyn/4qop5u+vHxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuqiIP4aonreKr
        Kf/iqyn/4qsp/+GrKNjirSgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA460lL+CqKV3jqydA/6oAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////gA//AAAD/AAAA/AAAAHgAAAAwAAAAMAAAADAAAAA4AAAAOAA
        AADgAAAB4AAAA+AAAAfwAAAH+AAAB/wAAAf/AAAH/4AAB/+AAAf/gAAH/8AAB//gAA//8AA///4AP///
        AD///4A////Af///8P////////////////8=
</value>
  </data>
</root>